"""
Django settings for twitter_scrap project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ug7adv2-dr+%%p1k)304rti#ycip1pxfnja5c_pr#6lz6ft=@m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'twitter',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'twitter_scrap.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'twitter_scrap.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES =  {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  #  This is the engine and adding this removed this error #ImproperlyConfigured at /register/ settings.DATABASES is improperly configured. Please supply the ENGINE value. Check settings documentation for more details.

        'NAME': BASE_DIR / 'db.sqlite3',
    }
}




















































# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

#TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Kolkata'  # Or our actual local timezone india 


USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/



# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
STATIC_URL = '/static/'
STATICFIlES_URL = os.path.join(BASE_DIR,'static')
MEDIA_URL = '/media/'
STATICFIlES_URL = os.path.join(BASE_DIR,'media')


#ValueError at /create/
#Cannot assign "<SimpleLazyObject: <django.contrib.auth.models.AnonymousUser object at 0x7a76dd783740>>": "Tweet.user" must be a "User" instance.
#we are giving login logout from contrib.auth in urls.py
LOGIN_URL ='/accounts/login/'
                                       # What URLs does this include?
                                       # By default, django.contrib.auth.urls includes these routes (with whatever prefix you give):

                                       # /accounts/login/ – login page

                                        # /accounts/logout/ – logout

                                       # /accounts/password_change/

                                       # /accounts/password_reset/

LOGIN_REDIRECT_URL = '/base/'
LOGOUT_REDIRECT_URL = '/base/'   #After the user logs out, they will be redirected to /create/, which is the URL where they can create a tweet.

#we have included this to check the user login from incognito mode then it has to login first 
#These settings help maintain sessions even if the browser's privacy features are active.
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Use database-backed sessions
SESSION_COOKIE_AGE = 3600  # 1 hour
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Keep sessions active after closing the browser
SESSION_COOKIE_SECURE = False  # Set to True if using HTTPS